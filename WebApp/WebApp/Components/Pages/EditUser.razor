@page "/edit-user/{userId}"
@using Microsoft.AspNetCore.Identity
@using WebApp.Data
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager Navigation

<h3>Edit User</h3>

@if (user == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="userModel" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label>Username</label>
            <InputText class="form-control" @bind-Value="userModel.UserName" />
        </div>

        <div class="mb-3">
            <label>Email</label>
            <InputText class="form-control" @bind-Value="userModel.Email" />
        </div>

        <button type="submit" class="btn btn-primary">Save Changes</button>
        <button type="button" class="btn btn-secondary" @onclick="CancelEdit">Cancel</button>
    </EditForm>
}

@code {
    [Parameter]
    public string userId { get; set; }
    private ApplicationUser user;
    private EditUserModel userModel = new EditUserModel();

    protected override async Task OnInitializedAsync()
    {
        user = await UserManager.FindByIdAsync(userId);
        if (user == null)
        {
            // Handle user not found
            Navigation.NavigateTo("/users");
            return;
        }

        // Initialize userModel with the user's current details
        userModel.UserName = user.UserName;
        userModel.Email = user.Email;
    }

    private async Task HandleValidSubmit()
    {
        // Update user details with form data
        user.UserName = userModel.UserName;
        user.Email = userModel.Email;

        // Update the user in the database
        var result = await UserManager.UpdateAsync(user);
        if (result.Succeeded)
        {
            Navigation.NavigateTo("/users");
        }
        else
        {
            foreach (var error in result.Errors)
            {
                // Display error messages
                // You can also add error messages to a list and display them on the form
                Console.WriteLine(error.Description);
            }
        }
    }

    private void CancelEdit()
    {
        Navigation.NavigateTo("/users");
    }

    public class EditUserModel
    {
        public string UserName { get; set; }
        public string Email { get; set; }
    }
}